<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="com.example.demo.mypage.dao.MypageDao"><!--namespace를 통해 UserDAO와 연결합니다. -->
  		
  <!-- 파일(비디오,썸네일 이미지)을 제외한 게시글 정보 Insert  -->		
  <insert id="videoBoardInsert" parameterType="com.example.demo.mypage.dto.VideoDto" useGeneratedKeys="true" keyProperty="video_number">  		
  		insert into video(user_id,category_code,video_title,public_check,video_rank_limit)
  				values(#{user_id},#{category_code},#{video_title},#{public_check},#{video_rank_limit})
  		<!-- 게시글이 등록된후 video_number 값을 가져와서 VideoDto에 setter를 이용해서 넣어줌 -->
  		<selectKey keyProperty="video_number" resultType="integer" order="AFTER">
			select max(video_number) from video
		</selectKey>  		  
  </insert>
  		
  		
  <!-- 파일(비디오,썸네일 이미지) Insert  -->		
  <insert id="videoFileInsert" parameterType="hashmap" >
  		insert into video_file(video_number,orgin_video_name,stored_video_name,orgin_video_thumb,stored_video_thumb)
  				values(#{video_number},#{orgin_video_name},#{stored_video_name},#{orgin_video_thumb},#{stored_video_thumb})  		
  </insert>
  		
  <!-- 해당 유저에 해당하는 동영상 게시물 리스트 가져오기  -->
  <select id="getVideoList" parameterType="String" resultType="com.example.demo.mypage.dto.VideoJoinVideoFileDto" >
	  	select v.video_number,v.user_id,v.category_code,v.video_title,v.public_check,v.video_hits,v.video_reports,v.video_date,v.video_rank_limit,vf.orgin_video_name,vf.stored_video_name,vf.orgin_video_thumb,vf.stored_video_thumb
			 from video v inner join video_file vf 
	    	on v.video_number = vf.video_number
	      where user_id = #{user_id}
	   order by v.video_number desc
  </select>
	
	<!-- 해당 유저가 오늘날짜에 동영상 게시물을 업로드 헀는지 검사 (없으면 0 , 있으면 1이상)   -->
	<select id="videoUploadCk" parameterType="String" resultType="int" >
		select count(*)
			from video
		 where user_id = #{user_id} and date_format(video_date,'%Y-%m-%d') = curdate()
	</select>
 
  <!-- 해당 유저의 경험치를 100EXP 축척시킴 -->
  <update id="ExpUpdate" parameterType="String">
  		update user 
  			set user_exp = user_exp + 3000
  		 where user_id = #{user_id}
  </update>
  
	<!--  해당 유저의 등급 상승 여부 확인후 업데이트 하는 스토어드 프로시저 호출  -->
	<select id="rankUpdateCkProcedures" statementType="CALLABLE" parameterType="String">
		{call rankUpdateCk_procedure(#{user_id})}			
	</select>	
	
	<!-- 해당 유저의 정보 가져오기 -->
	<select id="getUserInfo" parameterType="String" resultType="com.example.demo.user.dto.UserDto">
		select * 
			from user 
		 where user_id = #{user_id} 
	</select>
	
	<!-- 해당 동영상 게시물 번호에 해당하는 정보 가져오기  -->
	<select id="getVideoDetail" parameterType="int" resultType="com.example.demo.mypage.dto.VideoJoinVideoFileDto">
		select v.video_number,v.user_id,v.category_code,v.video_title,v.public_check,v.video_hits,v.video_reports,v.video_date,v.video_rank_limit,vf.orgin_video_name,vf.stored_video_name,vf.orgin_video_thumb,vf.stored_video_thumb
			from video v inner join video_file vf 
	    	on v.video_number = vf.video_number
	     where v.video_number = #{video_number}
	</select>
	
	
</mapper>
















